# handler for adapter mygrpcadapter
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: vampadapterhandler-TARGET_NAMESPACE
  namespace: istio-system
spec:
  adapter: vampadapter.istio-system
  connection:
   address: "vampadapter-TARGET_NAMESPACE:9000"
  params: {}
---
# instance for template logentry
# This will be handled in the code
# apiVersion: "config.istio.io/v1alpha2"
# kind: instance
# metadata:
#   name: vamplog-TARGET_NAMESPACE
#   namespace: istio-system
# spec:
#   template: logentry
#   params:
#     severity: '"info"'
#     timestamp: request.time
#     variables:
#       source: source.labels["app"] | source.workload.name | "unknown"
#       user: source.user | "unknown"
#       destination: destination.labels["app"] | destination.name | destination.service.name | "unknown"
#       destinationPort: destination.port | 0
#       responseCode: response.code | 0
#       responseSize: response.size | 0
#       latency: response.duration | "0ms"
#       url: request.path | ""
#       cookies: request.headers["cookie"] | ""
#       destinationVersion: destination.labels["version"] | "unknown"
---
# rule to dispatch to handler VampAdapter
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
 name: vampadapterrule-TARGET_NAMESPACE
 namespace: istio-system
spec:
  match: match(destination.namespace, "TARGET_NAMESPACE")
  actions:
  - handler: vampadapterhandler-TARGET_NAMESPACE.istio-system
    instances:
    - vamplog-TARGET_NAMESPACE
---
# VampAdapter Service
apiVersion: v1
kind: Service
metadata:
  name: vampadapter-TARGET_NAMESPACE
  namespace: istio-system
  labels:
    app: vampadapter-TARGET_NAMESPACE
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: vampadapter-TARGET_NAMESPACE
